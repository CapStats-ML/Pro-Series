# Librerías y directorio ----
library(easypackages)
libraries(c("zoo", "TSA", "MASS", "readr", "dplyr", "fable", "astsa", "readxl", "feasts",
"timetk", "plotly", "tibble", "tsibble", "forecast", "tidyverse", "lubridate",
"modeldata", "fabletools", "tseriesChaos", "nonlinearTseries", "rsample", "modeltime", "parsnip"))
setwd("~/REPOS GIT/Pro-Series/Pro-Series")
# Importanción y reconocimiento de la base ----
importaciones <- read.csv("Datos/Importaciones.csv")[1:120,]
names(importaciones)
sum(is.na(importaciones[,3]))
a <- c()
for ( i in 3:9){
a <- c(a, sum(is.na(importaciones[,i])))
}
vacip <- ts(importaciones[,2], start = c(2012, 01), frequency =12)
vafodo <- ts(importaciones[,3], start = c(2012, 01), frequency =12)
flete <- ts(importaciones[,4], start = c(2012, 01), frequency =12)
imp1 <- ts(importaciones[,5], start = c(2012, 01), frequency =12)
vacid <- ts(importaciones[,6], start = c(2012, 01), frequency =12)
pbk <- ts(importaciones[,7], start = c(2012, 01), frequency =12)
pnk <- ts(importaciones[,8], start = c(2012, 01), frequency =12)
# Primera exploración de variables
plot(vacip)# si
plot(vafodo) # si
plot(flete) # si
plot(imp1) # no
plot(vacid) # no
plot(pbk) # si
plot(pnk) # si
par(mfrow = c(2,2))
plot(x = Fecha , y = vafodo ,type = "l", main = 'Serie de tiempo variable Apertura')
vafodo
par(mfrow = c(2,2))
plot(vafodo ,type = "l", main = 'Serie de tiempo variable Apertura')
plot(flete , type = "l", main = 'Serie de tiempo variable Ultimo')
plot(pbk , type = "l", main = 'Serie de tiempo variable Maximo')
plot(pnk , type = "l", main = 'Serie de tiempo variable Minimo')
par(mfrow = c(1,1))
serie <- vafodo/1000000000
plot(serie)
VAFODO <- ts(importaciones[,3], start = c(2012, 01), frequency =12)
class(VAFODO)
str(VAFODO)
head(VAFODO)
plot(VAFODO)
VAFODO <- ts(importaciones[,3]/10000000000, start = c(2012, 01), frequency =12)
class(VAFODO)
str(VAFODO)
head(VAFODO)
plot(VAFODO)
plot(VAFODO, main="PRECIO DEL CARGAMENTO AL MOMENTO DE SER TRANSPORTADO VIA MARITIMA",
ylab="MM DOLARES", xlab="FECHA")
plot(VAFODO, main="PRECIO DEL CARGAMENTO AL MOMENTO \n DE SER TRANSPORTADO VIA MARITIMA",
ylab="MM DOLARES", xlab="FECHA")
Lambda1 <- forecast::BoxCox.lambda(VAFODO, method = "loglik")
Lambda1
BoxCox1 <- BoxCox(VAFODO, lambda = 0.25)
plot(BoxCox1, main="TRANSFORMACION BOXCOX PRECIO DIARIO DE\nLA ACCION DEL GRUPO ARGOS EN LA APERTURA",
ylab="Trans BoxCox1", xlab="Año")
MASS::boxcox(lm(VAFODO ~ 1),seq(-0.5, 0.5, length = 1000))
MASS::boxcox(lm(VAFODO ~ 1),seq(-1, 1, length = 1000))
BoxCox2 <- BoxCox(VAFODO, lambda = -0.17)
plot(BoxCox2, main="TRANSFORMACION BOXCOX PRECIO DIARIO DE\nLA ACCION DEL GRUPO ARGOS EN LA APERTURA",
ylab="Trans BoxCox2", xlab="Año")
Lambda1
BoxCox1 <- BoxCox(VAFODO, lambda = -0.25)
plot(BoxCox1, main="TRANSFORMACION BOXCOX PRECIO DIARIO DE\nLA ACCION DEL GRUPO ARGOS EN LA APERTURA",
ylab="Trans BoxCox1", xlab="Año")
Lambda2 <- forecast::BoxCox.lambda(BoxCox1, method = "loglik")
Lambda2
BoxCox2 <- BoxCox(BoxCox1, lambda = 0.65)
MASS::boxcox(lm(VAFODO ~ 1),seq(-1, 1, length = 1000))
BC <- MASS::boxcox(lm(VAFODO ~ 1),seq(-1, 1, length = 1000))
BC
max(BC$x[BC$y == max(BC$y)])
BoxCox2 <- BoxCox(VAFODO, lambda = -0.1891892)
plot(BoxCox2, main="TRANSFORMACION BOXCOX PRECIO DIARIO DE\nLA ACCION DEL GRUPO ARGOS EN LA APERTURA",
ylab="Trans BoxCox2", xlab="Año")
BoxCox <- BoxCox(VAFODO, lambda = -0.1891892)
plot(BoxCox, main="TRANSFORMACION BOXCOX PRECIO DIARIO DE\nLA ACCION DEL GRUPO ARGOS EN LA APERTURA",
ylab="Trans BoxCox2", xlab="Año")
MASS::boxcox(lm(BoxCox ~ 1),seq(-1, 1, length = 1000))
MASS::boxcox(lm(log(VAFODO) ~ 1),seq(-1, 1, length = 1000))
MASS::boxcox(lm(log(VAFODO) ~ 1),seq(-1, 1, length = 100))
MASS::boxcox(lm(log(VAFODO) ~ 1),seq(-1, 1, length = 10))
MASS::boxcox(lm(log(VAFODO) ~ 1),seq(-1, 1, length = 100000))
MASS::boxcox(lm(log(VAFODO) ~ 1),seq(-1, 1, length = 1000))
forecast::BoxCox.lambda(BoxCox, method = "loglik")
fit_Aper <- lm(BoxCox~time(BoxCox), na.action=NULL)
summary(fit_Aper)
plot.ts(BoxCox, main = "Tendencia del modelo",
ylab = 'Trans BoxCox', xlab = 'Años')
abline(fit_Aper, col = "red")
Aper.sin.tend <- BoxCox2 - predict(fit_Aper)
Aper.sin.tend <- BoxCox - predict(fit_Aper)
plot(Aper.sin.tend, main='SERIE SIN TENDENCIA',xlab='Año',ylab='Trans BoxCox2')
plot(Aper.sin.tend, main='SERIE SIN TENDENCIA',xlab='Año',ylab='Trans BoxCox')
acf(Aper.sin.tend, lag.max = 100)
tibble_Aper%>%
timetk::plot_time_series(BoxCox,.interactive = TRUE,.plotly_slider = TRUE)
df_Aper <- data.frame(Fecha = as.Date(importaciones$fecha_completa), BoxCox = as.matrix(BoxCox))
df_Aper
str(df_Aper)
tibble_Aper <- as_tibble(df_Aper)
tibble_Aper%>%
timetk::plot_time_series(Fecha, BoxCox,.interactive = TRUE,.plotly_slider = TRUE)
tibble_Aper%>%
mutate( Mod_BoxCox = smooth_vec(BoxCox,span = 0.75, degree = 2) )
Plot1 <- tibble_Aper %>%
mutate(Mod_BoxCox = smooth_vec(BoxCox, span = 0.25, degree = 2))%>%
ggplot(aes(Fecha, BoxCox)) +
geom_line() +
geom_line(aes(y = Mod_BoxCox), color = "darkblue") +
labs(title = "Estimacion de LOESS de la tendencia", x = "AÑOS", y = "Trans BoxCox2")
tibble_Aper <- tibble_Aper %>%
mutate(Mod1_BoxCox = smooth_vec(BoxCox, span = 0.25, degree = 2))
Aper.sin.LOESS <- BoxCox - as.numeric(tibble_Aper$Mod1_BoxCox)
plot.ts(Aper.sin.LOESS, main='Serie sin tendencia LOESS',xlab='Año',
ylab='Trans BoxCox2')
acf(Aper.sin.LOESS, lag.max = 365)
acf(Aper.sin.LOESS, lag.max = 100)
tsibble_Aper <- as_tsibble(df_Aper)
tsibble_Aper %>%
model(
STL(BoxCox ~ trend() +
season(window = "periodic"),
robust = TRUE)) %>%
components() %>%
autoplot()
tsibble_Aper
